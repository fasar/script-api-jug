/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package ch.genevajug

import com.fasterxml.jackson.module.kotlin.registerKotlinModule
import io.vertx.config.ConfigRetriever
import io.vertx.core.Future
import io.vertx.core.Vertx
import io.vertx.core.json.Json
import io.vertx.core.json.JsonObject


fun main(args: Array<String>) {
    Json.mapper.registerKotlinModule()

    val vertx = Vertx.vertx();

    var retriever = ConfigRetriever.create(vertx)
    var configFuture = Future.future<JsonObject>()
    retriever.getConfig { ar ->
        if (ar.succeeded()) {
            configFuture.complete(ar.result())
        } else {
            configFuture.fail(ar.cause())
        }
    }

    val myConfig = configFuture.map {
        it.getJsonObject("config").mapTo(MyConfig::class.java)
    }
    myConfig.compose { myConf ->
        val githToken = myConf.github.token
        println("Got token: $githToken")

        val githubTools = GithubTools(githToken, vertx)
        githubTools.getUser()
    }.setHandler { ar ->
        if (ar.failed()) {
            println("Can't use API because : ${ar.cause().message}")
            ar.cause().printStackTrace()
        } else {
            println("Success to get the User on Github: ${ar.result()}")
        }
        vertx.close()
    }

}

